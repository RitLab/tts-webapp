/**
 * Support API
 * A simple API for insert support contact.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ritlabs1404@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Success from '../model/Success';
import SupportRequest from '../model/SupportRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the insertSupport operation.
     * @callback module:api/DefaultApi~insertSupportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Insert support support API
     * @param {module:model/SupportRequest} supportRequest Insert support support API
     * @param {module:api/DefaultApi~insertSupportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    insertSupport(supportRequest, callback) {
      let postBody = supportRequest;
      // verify the required parameter 'supportRequest' is set
      if (supportRequest === undefined || supportRequest === null) {
        throw new Error("Missing the required parameter 'supportRequest' when calling insertSupport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Success;
      return this.apiClient.callApi(
        '/api/tts/support', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
